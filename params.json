{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"## Annotations\r\n### Handle Exceptions\r\n```\r\npublic @interface HandleException {\r\n\tClass<? extends Throwable>[] exceptions() default { RuntimeException.class };\r\n}\r\n```\r\n```\r\n@HandleException\r\npublic void throwAndHandleException() {\r\n\tthrow new IllegalArgumentException();\r\n}\r\n```\r\n\r\n### Suppress Exceptions\r\n```\r\npublic @interface SuppressExceptions {\r\n\tClass<? extends Throwable>[] value() default { Throwable.class };\r\n\tClass<?> returnClass() default Null.class;\r\n}\r\n```\r\n\r\n```\r\n@SuppressExceptions\r\npublic void throwAndSuppressException() {\r\n\tthrow new IllegalArgumentException();\r\n}\r\n```\r\nSuppress throwed Exceptions\r\n\r\n```\r\n@SuppressExceptions(returnClass = ArrayList.class)\r\npublic List<?> throwAndSuppressExceptionReturnEmptyList() {\r\n\tthrow new IllegalArgumentException();\r\n}\r\n```\r\nSuppress Exception and return new instance of \"returnClass\"\r\n\r\n### Wrap Exceptions\r\n```\r\npublic @interface WrapException {\r\n\tClass<? extends Throwable> catchException();\r\n\tClass<? extends Throwable> throwAs();\r\n\tString message() default \"Wrapped exception\";\r\n\tClass<? extends ExceptionWrapper<?, ?>> using() default DefaultExceptionWrapper.class;\r\n}\r\n```\r\n```\r\n@WrapException(catchException = IllegalArgumentException.class, throwAs = BusinessExcpetion.class)\r\npublic void throwAndWrapExeption() {\r\n\tthrow new IllegalArgumentException();\r\n}\r\n```\r\nWraps Runtime-Exceptions to BussinessException\r\n\r\n## Factory Definitions (ErrorHandler)\r\n```\r\n<bean parent=\"exceptionHandlerFactory\" id=\"sampleExceptionHandlerFactory\" class=\"ch.sample.project.SampleExceptionHandlerFactory\">\r\n\t<property name=\"mapping\">\r\n\t\t<map>\r\n\t\t\t<entry key=\"defaultExceptionHandler\" value=\"ch.krizi.exceptionhandler.handler.DefaultExceptionHandler\" />\r\n\t\t\t<entry key=\"exceptionHolder\" value=\"ch.krizi.exceptionhandler.handler.ExceptionHolder\" />\r\n\t\t\t<entry key=\"unreachedExceptionHandler\" value=\"ch.krizi.exceptionhandler.handler.UnreachedExceptionHandler\" />\r\n\t\t</map>\r\n\t</property>\r\n</bean>\r\n```","name":"Exceptionhandler","tagline":"Exception Handler","google":""}